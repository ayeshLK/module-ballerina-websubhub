version: '2'

services:
    lb:
        image: 'ballerina/loadbalancersvc:v1'
        container_name: lb
        ports:
            - '9090:9090'
        depends_on:
            hub-1:
                condition: service_healthy
                restart: true
        volumes:
            - ./load_balancer/resources/lb-config.json:/home/ballerina/resources/lb-config.json
        network_mode: "host"

    hub-1:
        image: 'ballerina/kafka:v1'
        container_name: hub-1
        ports:
            - '9000:9000'
        depends_on:
            consolidator:
                condition: service_healthy
                restart: true
            idp:
                condition: service_started
        healthcheck:
            test: ["CMD-SHELL", "wget --no-verbose --no-check-certificate --tries=1 --spider 'https://localhost:9000/health' || exit 1"]
            interval: 30s
            timeout: 10s
            start_period: 30s
            retries: 10
        volumes:
            - ./hub/Config.toml:/home/ballerina/Config.toml
        network_mode: "host"

    consolidator: 
        image: 'ballerina/consolidator:v1'
        container_name: consolidator
        ports:
            - '10001:10001'
        depends_on:
            broker:
                condition: service_started
        healthcheck:
            test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider 'http://localhost:10001/health/readiness' || exit 1"]
            interval: 30s
            timeout: 10s
            start_period: 30s
            retries: 10
        network_mode: "host"

    idp:
        image: 'ayeshalmeida/wso2-is:5.11.0.update'
        container_name: idp
        ports:
            - '9443:9443'
        network_mode: "host"

    zookeeper:
        image: 'confluentinc/cp-zookeeper:latest'
        hostname: zookeeper
        container_name: kafka-zookeeper
        ports:
            - '2181:2181'
        environment:
            ZOOKEEPER_CLIENT_PORT: 2181
            ZOOKEEPER_TICK_TIME: 2000

    broker:
        image: 'confluentinc/cp-server:latest'
        container_name: kafka-broker
        depends_on:
            - zookeeper
        ports:
            - '9094:9094'
        environment:
            KAFKA_BROKER_ID: 1
            KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
            KAFKA_SECURITY_INTER_BROKER_PROTOCOL: PLAINTEXT
            KAFKA_NUM_PARTITIONS: 3
            KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,EX_PLAINTEXT://localhost:9092,EX_SSL://localhost:9094
            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,EX_PLAINTEXT:PLAINTEXT,EX_SSL:SSL
            KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
            KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 3
            KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
            KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
            KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
            KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
            KAFKA_SSL_KEYSTORE_FILENAME: kafka.broker.keystore.jks
            KAFKA_SSL_KEYSTORE_CREDENTIALS: broker_keystore_creds
            KAFKA_SSL_KEY_CREDENTIALS: broker_sslkey_creds
            KAFKA_SSL_TRUSTSTORE_FILENAME: kafka.broker.truststore.jks
            KAFKA_SSL_TRUSTSTORE_CREDENTIALS: broker_truststore_creds
        volumes:
            - ./_resources/trustoresandkeystores/broker_keystore_creds:/etc/kafka/secrets/broker_keystore_creds
            - ./_resources/trustoresandkeystores/broker_sslkey_creds:/etc/kafka/secrets/broker_sslkey_creds
            - ./_resources/trustoresandkeystores/broker_truststore_creds:/etc/kafka/secrets/broker_truststore_creds
            - ./_resources/trustoresandkeystores/kafka.broker.keystore.jks:/etc/kafka/secrets/kafka.broker.keystore.jks
            - ./_resources/trustoresandkeystores/kafka.broker.truststore.jks:/etc/kafka/secrets/kafka.broker.truststore.jks
